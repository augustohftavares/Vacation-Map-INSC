@model IEnumerable<INSCmapaFerias.Areas.Identity.Data.Events>;

@{
    ViewData["Title"] = "Gestor de Férias";
}

<div class="container">

    <div class="row">

        <h1 class="text-center">@ViewData["Title"]</h1>

    </div>

    <div class="row">

        <input class="form-control" type="text" id="searchEvents" onkeyup="searchBar()" placeholder="Pesquisar férias..." title="Pesquisar férias">

        <table class="table tableEvents" id="tableEvents">

            <caption>Lista de férias</caption>
  
            <thead>
    
                <tr class="trHeader">
                    <th scope="col">@Html.DisplayNameFor(model => model.Title)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.event_start)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.event_end)</th> 
                    <th scope="col">@Html.DisplayNameFor(model => model.Total)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Status)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Options)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Options_End)</th>
                    <th></th>
                </tr>
            </thead>
  
            <tbody>

                @foreach (var item in Model){
                    <tr class="trBody">
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.event_start)</td>
                        <td>@Html.DisplayFor(modelItem => item.event_end)</td>
                        <td>@Html.DisplayFor(modelItem => item.Total)</td>
                        <td>
                            @if(item.Status == "Aprovado")
                            {
                                <span class="text-success">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                            @if(item.Status == "Rejeitado")
                            {
                                <span class="text-danger">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                            @if(item.Status == "Enviado")
                            {
                                <span class="text-primary">@Html.DisplayFor(modelItem => item.Status) (Pedido Pendente)</span>
                            }
                        </td>
                        <td>
                            @if(item.Status == "Rejeitado")
                            {
                                @Html.DisplayFor(modelItem => item.Options)
                            }

                        </td>
                        <td>
                            @if(item.Status == "Rejeitado")
                            {
                                @Html.DisplayFor(modelItem => item.Options_End)
                            }
                        </td>
                        <td>
                            @if (item.Status == "Rejeitado" || item.Status == "Enviado")
                            {
                                <a class="btn botaoEditarCRUD" asp-action="Editar_Ferias" asp-route-id="@item.event_id">Editar</a>
                                <a class="btn botaoEliminarCRUD" asp-action="Eliminar_Ferias" asp-route-id="@item.event_id">Eliminar</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>

        </table>

    </div>

</div>

@section Scripts{
    <!-- FERIAS EDIT SUCCESS-->
    @if (TempData["FeriasEditSuccess"] != null)
    {
    <script>
        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Atualizado com sucesso.',
            text: 'Email de rejeição enviado ',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
        });
    </script>
    } else if (TempData["FeriasRemoveSuccess"] != null) {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'info',
                title: 'Removido com sucesso.',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
            });
        </script>
    } else if(TempData["FeriasNull"] != null ){
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Erro',
                html: 'Não foi possível identificar estas férias, entre em contato com um <span class="text-danger">administrador</span>.',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
            });
        </script>
    } else if(TempData["FeriasLimit"] != null) {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Erro',
                html: 'Ultrapasseste o limite de férias permitido por ano:<br><b>(22 dias)</b>',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
            });
        </script>
    } else if(TempData["FeriasInvalidDates"] != null){
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Erro',
                html: 'A data de inicio não pode ser maior que a data de fim e vice-versa!',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
            });
        </script>
    } else if(TempData["DBerror"] != null) {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Erro',
                html: 'Erro ao tentar atualizar na base de dados.',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
            });
        </script>
    }
        
}<!-- end Section Scripts-->